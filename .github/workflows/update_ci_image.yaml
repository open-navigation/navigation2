---
name: Update CI Image

on:
  schedule:
  # 7am UTC, 12am PDT
  - cron:  '0 7 * * *'
  push:
    branches:
    - main
    paths:
    - '**/package.xml'
    - '**/*.repos'
    - 'Dockerfile'

jobs:
  check_ci_files:
    name: Check CI Files
    runs-on: ubuntu-latest
    outputs:
      trigger: ${{ steps.check.outputs.trigger }}
      no_cache: ${{ steps.check.outputs.no_cache }}
    steps:
      - name: "Check package updates"
        id: check
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "::set-output name=trigger::true"
          echo "::set-output name=no_cache::false"
  check_ci_image:
    name: Check CI Image
    if: ${{ github.event_name == 'schedule' }}
    needs: check_ci_files
    runs-on: ubuntu-latest
    outputs:
      trigger: ${{ steps.check.outputs.trigger }}
      no_cache: ${{ steps.check.outputs.no_cache }}
    container:
      image: rosplanning/navigation2:main
    steps:
      - name: "Check apt updates"
        id: check
        env:
          SOURCELIST: sources.list.d/ros2.list
        run: |
          apt-get update \
            -o Dir::Etc::sourcelist="${SOURCELIST}"
          apt-get --simulate upgrade \
            -o Dir::Etc::sourcelist="${SOURCELIST}" \
            | grep "0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded." \
            && echo "::set-output name=trigger::false" \
            || echo "::set-output name=trigger::true"
          echo "::set-output name=no_cache::true"
  rebuild_ci_image:
    name: Rebuild CI Image
    if: |
      ${{ toJSON(needs.check_ci_files.outputs.trigger) ||
      toJSON(needs.check_ci_image.outputs.trigger) }}$
    needs:
      - check_ci_files
      - check_ci_image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set build config
        id: config
        run: |
          timestamp=$(date --utc +%Y%m%d%H%M%S)
          echo "::set-output name=timestamp::${timestamp}"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          no-cache: |
            ${{ toJSON(needs.check_ci_files.outputs.no_cache) ||
            toJSON(needs.check_ci_image.outputs.no_cache) }}$
          cache-from: type=registry,ref=rosplanning/navigation2:main
          cache-to: type=inline
          target: builder
          tags: |
            rosplanning/navigation2:main
            rosplanning/navigation2:main-${{ steps.config.outputs.timestamp }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
