# Snippet to reverse proxy websocket connections
# to direct backend traffic while hosting frontend
# E.g Use web apps from a forwarded port via CodeSpaces
(websockets) {
	# Avoid path issues from trailing slashes
	# E.g. whenever user types or copies URLs
	rewrite /{args.0} /{args.0}/
	# Matcher for websocket connection upgrade requests
	@{args.0}_websockets {
		# Filter matcher by differentiating via path
		# so web apps can be proxied to different backends
		path /{args.0}/
		# Avoid case sensitivity issues when matching field values
		# E.g. when values are rewritten by Codespace port forwarding
		header_regexp Connection (?i)(Upgrade)
		header Upgrade websocket
	}
	# Configure reverse proxy for web app to given backend address
	reverse_proxy @{args.0}_websockets {args.1}
}

# Snippet for global matchers and variables
# to logically expression request conditions
# E.g. for conditionally changing redirects
(globals) {
	# Matcher for http request scheme. E.g. "http" or "https"
	@http_scheme {
		expression {http.request.scheme}=="https" || {header.X-Forwarded-Scheme}=="https"
	}
	# If any http scheme is "https", then use "wss"
	vars @http_scheme ws.scheme "wss"
	# Else default to "ws"
	vars ws.scheme "ws"

	# Matcher for forwarded request headers
	@host_forwarded {
		header X-Forwarded-Host *
	}
	# If http headers exists, then use them
	vars @host_forwarded ws.host {header.X-Forwarded-Host}
	# Else default to host in request
	vars ws.host {http.request.hostport}
}

# Snippet for redirect with given URL queries values
# to simplify remote development with web apps
# E.g auto redirect websocket URL to match request scheme
(redirect) {
	# Configure redirect to match request scheme
	redir /{args.0}/nav2 /{args.0}/?ds=foxglove-websocket&ds.url={vars.ws.scheme}://{vars.ws.host}{path.dir}
}

# Listen for http requests on port 8080
# regardless of hostname or domain address
# E.g. whatever Codespaces assigns to host
:8080 {
	# Include global matchers and variables
	import globals
	# Sets the root path of the site to /srv directory
	# where all installed web apps are nested
	root * /srv
	# Serve static files from root path
	file_server
	# Matcher for helper index web page
	@help_index {
		# Avoid clobbering other index.html files
		# by filter matcher to only root index.html
		path /
		file index.html
	}
	# Configure template to serve markdown files
	templates @help_index
	# Encodes responses for compression
	encode gzip

	# Reverse proxy websockets for each web app
	import websockets "foxglove" "localhost:8765"
	import websockets "gzweb" "localhost:9090"

	# Redirect query values for each web app
	import redirect "foxglove"

	# For debugging
	# log {
	# 	output file /var/log/caddy/server.log
	# }
}
